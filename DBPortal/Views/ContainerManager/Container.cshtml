@using DBPortal.Models
@model Container

@{
    Layout = "_Layout";
}

@section Scripts
{
    <script>
    function stopContainer() {
        httpPostAsync('@Url.Action("Stop", new {id = Model.Id})', '', () => {
            setTimeout(() => { window.location.reload(); }, 500);
        });
    }
    
    function startContainer() {
        httpPostAsync('@Url.Action("Start", new {id = Model.Id})', '', () => {
            setTimeout(() => { window.location.reload(); }, 500);
        });
    }
    
    function deleteContainer() {
        httpPostAsync('@Url.Action("Delete", new {id = Model.Id})', '', () => {
            window.location.replace('@Url.Action("Index")');
        });
    }
    
    function rebuildContainer() {
        httpPostAsync('@Url.Action("RebuildContainer", new {id = Model.Id})', '', (response) => {
            console.log(response.responseText);
            let id = JSON.parse(response.responseText).id;
            if (id !== undefined) {
                window.location.replace("/ContainerManager/Container/" + id);
            }
        });
    }
    </script>
}

<div class="row">
    <div class="col">
        <h1>@Model.FriendlyName()</h1>
        <button onclick="startContainer()" class="btn btn-success" style="width: 120px">Start</button>
        <button onclick="stopContainer()" class="btn btn-warning" style="width: 120px">Stop</button>
        <button onclick="deleteContainer()" class="btn btn-danger" style="width: 120px">Delete</button>
        <button onclick="rebuildContainer()" class="btn btn-danger" style="width: 120px">Rebuild</button>
    </div>
</div>
<div class="row" style="margin-top: 40px;">
    <ul>
        <li>Id: @Model.Id</li>
        <li>Image: @Model.Image</li>
        <li>Created: @Model.Created.ToLongTimeString()</li>
        <li>Ports: @Model.PortDescription()</li>
        <li>State: @Model.State</li>
        @if (Model.IsMySqlContainer)
        {
            <li>Directory: @Model.ContainerDirectoryName</li>
            <li>Files:</li>
            <ul>
                @if (@Model.SqlScriptFiles != null)
                {
                    @foreach (var filename in @Model.SqlScriptFiles)
                    {
                        <li>@filename.Name</li>
                    }
                }
            </ul>
        }
    </ul>
</div>